podTemplate(label: 'clairctl',
    containers: [
        containerTemplate(name: 'golang', image: 'golang:1.8', ttyEnabled: true, command: '/bin/sh -c', args: 'cat'),
        containerTemplate(name: 'docker', image: 'ptcos/docker-client:latest', alwaysPullImage: true, ttyEnabled: true, command: '/bin/sh -c', args: 'cat')
    ],
    volumes: [
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')
    ]
) {
    node('clairctl') {
        stage('Checkout') {
            checkout scm
        }
        stage('Build') {
            container('golang') {
                sh """
                go-wrapper download github.com/jgsqware/clairctl
                cd /go/src/github.com/jgsqware/clairctl
                go get -u github.com/jteeuwen/go-bindata/...
                go generate ./clair
                cd /go
                CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/clairctl github.com/jgsqware/clairctl
                mv -f /go/bin/clairctl $WORKSPACE/clairctl
                """
            }
        }
        stage('Package') {
            container('docker') {
                docker.withRegistry('https://registry.hub.docker.com','docker-hub-credentials') {
                  def fullPath = "ptcos/docker-client"
                  def tag = "1.2.${env.BUILD_NUMBER}"
                  sh "docker build -t $fullPath:$tag -t $fullPath:latest ."
                  def image = docker.image(fullPath)
                  image.push(tag)
                  image.push("latest")
                }
            }
        }
    }
}
