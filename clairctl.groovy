def vulnerabilitycheck() {
	PTCS_DOCKER_REGISTRY_ANALYSIS = CLAIRCTL_REGISTRY.replaceAll(/\//,'-')

	// Luo HTML-raportin lähettämällä imagen layerit Clairiin
	sh """
	clairctl --log-level Debug push --config /usr/share/clairctl.yml --local ${CLAIRCTL_REGISTRY}
	clairctl --log-level Debug report --config /usr/share/clairctl.yml --format html --local ${CLAIRCTL_REGISTRY}:latest
	"""
		
	// HTML Publisher Plugin luo linkin buildin sivulle raporttiin
		publishHTML (target: [
		allowMissing: false,
		alwaysLinkToLastBuild: false,
		keepAll: false,
		reportDir: 'reports/html',
		reportFiles: 'analysis-*',
		reportName: 'Vulnerability Report',
		reportTitles: ''
		])
		
	// Unknown haavoittuvuudet
	UNKNOWN_V = sh (
		script: "grep -c '<div>Unknown</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Unknown haavoittuvuudet: ${UNKNOWN_V}"

	// Negligible haavoittuvuudet
	NEGLIGIBLE_V = sh (
		script: "grep -c '<div>Negligible</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Negligible haavoittuvuudet: ${NEGLIGIBLE_V}"

	// Low haavoittuvuudet
	LOW_V = sh (
		script: "grep -c '<div>Low</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Low haavoittuvuudet: ${LOW_V}"

	// Medium haavoittuvuudet
	MEDIUM_V = sh (
		script: "grep -c '<div>Medium</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Medium haavoittuvuudet: ${MEDIUM_V}"

	// High haavoittuvuudet
	HIGH_V = sh (
		script: "grep -c '<div>High</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "High haavoittuvuudet: ${HIGH_V}"

	// Critical haavoittuvuudet
	CRITICAL_V = sh (
		script: "grep -c '<div>Critical</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Critical haavoittuvuudet: ${HIGH_V}"

	// Defcon1 haavoittuvuudet
	DEFCON_V = sh (
		script: "grep -c '<div>Defcon1</div>' reports/html/analysis-${PTCS_DOCKER_REGISTRY_ANALYSIS}-latest.html | cat",
		returnStdout: true
	).trim()
	echo "Defcon1 haavoittuvuudet: ${DEFCON_V}"

	// Esitä aikaisemmat if else ymmärrettävään muotoon integeriksi
	int unknown_v = UNKNOWN_V as Integer
	int negligible_v = NEGLIGIBLE_V as Integer
	int low_v = LOW_V as Integer
	int medium_v = MEDIUM_V as Integer
	int high_v = HIGH_V as Integer
	int critical_v = CRITICAL_V as Integer
	int defcon_v = DEFCON_V as Integer	
	
	// Tarkasta onko liikaa jotain haavoittuvuuksia
	if (40 < unknown_v) {
		echo 'Unknown:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Unknown:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
		
	if (40 < negligible_v) {
		echo 'Negligible:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Negligible:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
	
	if (30 < low_v) {
		echo 'Low:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Low:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
	
	if (20 < medium_v) {
		echo 'Medium:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Medium:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
	
	if (10 < high_v) {
		echo 'High:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'High:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
	
	if (10 < critical_v) {
		echo 'Critical:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Critical:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
	
	if (10 < defcon_v) {
		echo 'Defcon1:Liikaa haavoittuvuuksia. Buildi seis.'
		sh 'exit 1'
	}
	else {
		echo 'Defcon1:Ei ollut tarpeeksi haavoittuvuuksia.'
	}
}
return this